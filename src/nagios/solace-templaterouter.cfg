define host {
        use                     generic-host            
        host_name               $HOSTNAME
        alias                   $HOSTNAME
        address                 $HOSTIP
        max_check_attempts      10
        }

define service{
        use                             generic-service         
        host_name                       $HOSTNAME
        service_description             alarm
        check_command                   alarm!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD
        }

define service{
        use                             generic-service         
        host_name                       $HOSTNAME
        service_description             bridge
        check_command                   bridge_uni!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD!$VPN_BRIDGENAME!$VPNNAME
        }
define service{
        use                             generic-service         
        host_name                       $HOSTNAME
        service_description             bridge
        check_command                   bridge_bi!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD!$VPN_BRIDGENAME_BI!$VPNNAME
        }
define service{
        use                             generic-service         
        host_name                       $HOSTNAME
        service_description             disk
        check_command                   disk!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD
        }
define service{
        use                             generic-service,graphed-service  
        host_name                       $HOSTNAME
        service_description             env
        check_command                   env!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD!2000!1000!80!90!90!100
        }
define service{
        use                             generic-service         
        host_name                       $HOSTNAME
        service_description             hardware
        check_command                   hardware!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD!2!1
        }
define service{
        use                             generic-service,graphed-service  
        host_name                       $HOSTNAME
        service_description             iface
        check_command                   iface_eth!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD!1/6/1
        }
define service{
        use                             generic-service,graphed-service   
        host_name                       $HOSTNAME
        service_description             iface_l
        check_command                   iface_lag!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD!1/6/lag1!1!1!1!1
        }
define service{
        use                             generic-service         
        host_name                       $HOSTNAME
        service_description             memory
        check_command                   memory!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD!80!90
        }
define service{
        use                             generic-service         
        host_name                       $HOSTNAME
        service_description             spool_vpn
        check_command                   spool_vpn!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD!$VPNNAME!70!90
        }
define service{
        use                             generic-service         
        host_name                       $HOSTNAME
        service_description             message-spool
        check_command                   message-spool!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD!70!90!2000!2000!20000!20000!30000!55000!1000000!50000000!30000!55000!1000000!50000000
        }
define service{
        use                             generic-service         
        host_name                       $HOSTNAME
        service_description             partition
        check_command                   partition!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD!70!90!/dev/md6
        }
define service{
        use                             generic-service,graphed-service 
        host_name                       $HOSTNAME
        service_description             queue
        check_command                   queue!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD!$VPNNAME!test!100!1000
        }
define service{
        use                             generic-service         
        host_name                       $HOSTNAME
        service_description             redundancy
        check_command                   redundancy!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD
        }
define service{
        use                             generic-service         
        host_name                       $HOSTNAME
        service_description             replication
        check_command                   replication!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD!$VPNNAME
        }
define service{
        use                             generic-service         
        host_name                       $HOSTNAME
        service_description             vpn
        check_command                   vpn!$HOSTIP:$HOSTPORT!$USERNAME!$PASSWORD!$VPNNAME!1000!10000!10000!100000!50!500
        }
