#!/bin/bash
#mk_nagiossolacecfg
# generate nagios cfg file solace router from template
# History
#-------------------------------------------------------------
# nram, Nov 04, 2015
# - check and exit if cfgfile is added in nagios.cfg 
# - handle cfg file with no or only unidirectional bridge 

me=mk_nagiossolacecfg
nagioscfg=/etc/nagios/nagios.cfg
nagioscmdfile=/etc/nagios/objects/commands.cfg

echo
echo "Generating Nagios config for Solace appliance ..."
tmplfile=cfg/solace-templaterouter.cfg

if [  $# -lt 1 ]; then
  echo "Missing cfgfile argument. exiting"
  exit
fi
cfgfile=$1
if [  ! -f $cfgfile ]; then
  echo "Bad cfgfile argument $cfgfile. exiting"
  exit
fi
echo "   Using cfgfile $cfgfile"
. $cfgfile
#echo "VPN_BRIDGENAME <$VPN_BRIDGENAME>"
#echo "VPN_BRIDGENAME_BI <$VPN_BRIDGENAME_BI>"
if [ -z "$VPN_BRIDGENAME" ]; then
  tmplfile=cfg/solace-templaterouter-no_bridge.cfg
elif [ -z "$VPN_BRIDGENAME_BI" ]; then
  tmplfile=cfg/solace-templaterouter-no_bi_bridge.cfg
fi
if [ ! -f $tmplfile ]; then
  echo "Template file not found: $tmplfile. exiting"
  exit
fi
echo "   Using template file $tmplfile"

#ext="${outfile##*.}"
fname=$(basename "${cfgfile%.*}")
outfile=/etc/nagios/objects/solace-$fname.cfg
if [ -f $outfile ]; then
  echo "File $outfile already exists. exiting"
  exit
fi
grep -q "^cfg_file=$outfile" $nagioscfg && {
  echo "File $outfile already in $nagioscfg. exiting"
  exit
}

> $outfile || { 
  echo "Can't create output file $outfile. exiting"
  exit
}

echo "Generating  config ..."
echo "   $outfile :"
cat > $outfile <<__END__
# Nagios config for soalce appliance 
# generated from cfg file $cfgfile 
# template file used $tmplfile
# $(date)
__END__
cat $tmplfile | while read line
do
   eval echo "$line"
done >> $outfile

ts=$(date "+%y%m%d_%H%M%S")
echo "Setting up config files ... "
echo "   $nagioscfg : "
cp -p $nagioscfg $nagioscfg.sav-$ts
cat >>$nagioscfg <<__END__
#-- created by $me $(date "+%D %T")
cfg_file=$outfile
__END__
